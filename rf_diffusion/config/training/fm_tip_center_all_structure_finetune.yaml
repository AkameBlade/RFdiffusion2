defaults:
  - fm_tip_center_all_from_scratch_base

diffuser_hydra: # using hydra.instantiate format to instantiate the diffuser now
  _target_: noisers.NormalizingFlow
  cfg: ${diffuser}

seed: 0
wandb: True
wandb_prefix: center_all_from_pretrained_weights_new_dataloader_redux
wandb_project: flowmatching_newdataloader_redux
debug: False
epoch_size: 24000
prob_self_cond: 0.5
seq_self_cond: False
sequence_decode: True
rundir: /net/scratch/ptkim/new_dataloader_redux
interactive: False
batch_size: 1
verbose_checks: False
lr: 0.001
l2_coeff: 0.01
model_name: RFD
ckpt_load_path: /home/ptkim/netlink/new_dataloader_redux/center_all_from_pretrained_weights_new_dataloader_redux2024-10-30_10:50:15.943906/rank_0/models/RFD_3.pt
resume: True
resume_scheduler: True
reinitialize_missing_params: False
zero_weights: False
n_epoch: 500
maxcycle: 1
timing_summary_every: 30
pseudobatch: 24
log_inputs: False
metrics: ['rigid_loss', 'true_bond_lengths', 'displacement_permutations', 'rotations', 'rotations_input']
n_write_pdb: 50
saves_per_epoch: 2

benchmark:
  pipeline_yaml: training_benchmarks_ptkim_simple.yaml

extra_tXd: ['sinusoidal_timestep_embedding']

datahub:
  pdb:
    probability: 0.5
    dataset:
      _target_: datahub.datasets.base.StructuralDatasetWrapper
      save_failed_examples_to_dir: null
      cif_parser:
        _target_: cifutils.CIFParser
      cif_parser_args:
        load_from_cache: True
        save_to_cache: True
        cache_dir: /net/scratch/ptkim/datahub_pn_units_cache
      dataset_parser:
        _target_: datahub.datasets.dataframe_parsers.PNUnitsDFParser
      dataset:
        _target_: datahub.datasets.base.PandasDataset
        name: pn_unit
        id_column: example_id
        data: /projects/ml/RF2_allatom/datasets/pdb/2024_09_10/pn_units_df.parquet
        filters:
          - "resolution < 9.0 and ~method.str.contains('NMR')"
          - "num_polymer_pn_units <= 300" 
          - "cluster.notnull()"
          # - "~(q_pn_unit_non_polymer_res_names.notnull() and q_pn_unit_non_polymer_res_names.str.contains('${resolve_import:cifutils.constants.AF3_EXCLUDED_LIGANDS_REGEX}', regex=True))"
        columns_to_load:
          # columns required for identification, filtering & weighting
          - example_id
          - pdb_id
          - assembly_id
          - resolution
          - num_polymer_pn_units
          - method
          - cluster
          - n_prot
          - n_nuc
          - n_ligand
          # pn_unit specific columns
          - q_pn_unit_iid
          - q_pn_unit_non_polymer_res_names
      transform:
        _target_: rf_diffusion.datahub_pipelines.rf_diffusion.build_rf_diffusion_transform_pipeline
        crop_size: 384
        crop_contiguous_probability: 0.9
        crop_spatial_probability: 0.1
    weights:
      _target_: datahub.samplers.calculate_weights_for_pdb_dataset_df
      beta: 0.5
      alphas:
        a_prot: 3.0
        a_nuc: 3.0
        a_ligand: 1.0

  pdb_interface:
    probability: 0.5
    dataset:
      _target_: datahub.datasets.base.StructuralDatasetWrapper
      save_failed_examples_to_dir: null
      cif_parser:
        _target_: cifutils.CIFParser
      cif_parser_args:
        load_from_cache: True
        save_to_cache: True
        cache_dir: /net/scratch/ptkim/datahub_interface_cache
      dataset_parser:
        _target_: datahub.datasets.dataframe_parsers.InterfacesDFParser
      dataset:
        _target_: datahub.datasets.base.PandasDataset
        name: interface
        id_column: example_id
        data: /projects/ml/RF2_allatom/datasets/pdb/2024_09_10/interfaces_df.parquet
        filters:
          - "resolution < 9.0 and ~method.str.contains('NMR')"
          - "num_polymer_pn_units <= 300" 
          - "cluster.notnull()"
          # - "~(pn_unit_1_non_polymer_res_names.notnull() and pn_unit_1_non_polymer_res_names.str.contains('${resolve_import:cifutils.constants.AF3_EXCLUDED_LIGANDS_REGEX}', regex=True))"
          # - "~(pn_unit_2_non_polymer_res_names.notnull() and pn_unit_2_non_polymer_res_names.str.contains('${resolve_import:cifutils.constants.AF3_EXCLUDED_LIGANDS_REGEX}', regex=True))"
          - "is_inter_molecule"
        columns_to_load:
          # columns required for identification, filtering & weighting
          - example_id
          - pdb_id
          - assembly_id
          - resolution
          - num_polymer_pn_units
          - method
          - cluster
          - n_prot
          - n_nuc
          - n_ligand
          # interface specific columns
          - pn_unit_1_iid
          - pn_unit_2_iid
          - pn_unit_1_non_polymer_res_names
          - pn_unit_2_non_polymer_res_names
          - is_inter_molecule
      transform:
        _target_: rf_diffusion.datahub_pipelines.rf_diffusion.build_rf_diffusion_transform_pipeline
        crop_size: 384
        crop_contiguous_probability: 0.0
        crop_spatial_probability: 1.0
    weights:
      _target_: datahub.samplers.calculate_weights_for_pdb_dataset_df
      beta: 0.5
      alphas:
        a_prot: 3.0
        a_nuc: 3.0
        a_ligand: 1.0

    # monomer_distillation: TODO figure out how to make this work - turn off atomization here
    #   probability: 0.5
    #   sub_datasets:
    #     af2fb_distillation:
    #       dataset:
    #         _target_: datahub.datasets.base.StructuralDatasetWrapper
    #         save_failed_examples_to_dir: null

    #         # cif parser
    #         cif_parser:
    #           _target_: cifutils.CIFParser
    #         cif_parser_args:
    #           assume_residues_all_resolved: true
    #           cache_dir: null
    #           load_from_cache: false
    #           save_to_cache: false 

    #         # metadata parser
    #         dataset_parser:
    #           _target_: datahub.datasets.dataframe_parsers.AF2FB_DistillationParser

    #         # metadata dataset
    #         dataset:
    #           _target_: datahub.datasets.base.PandasDataset
    #           name: af2fb_distillation
    #           id_column: example_id
    #           data: /squash/af2_distillation_facebook/af2_distillation_facebook.parquet
    #           columns_to_load:
    #             - example_id
    #             - sequence_hash
    #         return_key: feats
    #         transform:
    #           _target_: datahub.pipelines.rf2aa.build_rf2aa_transform_pipeline
    #           protein_msa_dirs: [{"dir": "/squash/af2_distillation_facebook/msa", "extension": ".a3m", "directory_depth": 2}]
    #           rna_msa_dirs: []
    #           n_recycles: ${loader_params.maxcycle}
    #           crop_size: ${loader_params.crop_size}
    #           crop_contiguous_probability: 0.25
    #           crop_spatial_probability: 0.75
    #           msa_mask_probability: ${loader_params.p_msa_mask}
    #           assert_rf2aa_assumptions: True
    #           convert_feats_to_rf2aa_input_tuple: True
    #           n_msa_cluster_representatives: 1
    #           msa_n_extra_rows: 1024  # Paper mode: 1024

guidepost_bonds: True

diffuser:
  diffuse_trans: true
  diffuse_rot: true
  r3:
    min_b: 0.1
    max_b: 20.0
    coordinate_scaling: 0.1
  so3:
    num_omega: 1000
    num_sigma: 1000
    min_sigma: 0.1
    max_sigma: 1.5
    schedule: logarithmic
    cache_dir: .cache/
    use_cached_score: true
  T: 200
  time_type: continuous
  t_distribution: uniform_t001
  type: flow_matching
  min_t: 0.01
  rots:
    train_schedule: linear
    sample_schedule: exp
    exp_rate: 10
  trans:
    train_schedule: linear
    sample_schedule: linear
  sampling:
    num_timesteps: 100
  preserve_motif_sidechains: false

dataloader:
  OMIT_PERMUTATE: false
  RADIAL_CROP: true
  p_msa_mask: 0.0
  use_phospate_frames_for_NA: true
  BLOCKCUT: 5
  CN_DICT: /home/jwatson3/torch/cn_ideal/cn_ideal_train_test.pt
  CN_DIR: /home/jwatson3/torch/cn_ideal
  COMPLEX_HAL_MASK_HIGH: 35
  COMPLEX_HAL_MASK_HIGH_AR: 50
  COMPLEX_HAL_MASK_LOW: 10
  COMPLEX_HAL_MASK_LOW_AR: 20
  COMPL_DIR: /projects/ml/RoseTTAComplex
  COMPL_LIST: /projects/ml/RoseTTAComplex/list.hetero.csv
  CROP: 256
  DATAPKL: ./dataset.pkl
  DATAPKL_AA: aa_dataset_256.pkl
  DATASETS: pdb_aa,compl,sm_complex,sm_compl_covale,metal_compl,sm_compl_asmb,sm_compl_multi
  DATASET_PROB:
  - 0.4
  - 0.2
  - 0.15
  - 0.1
  - 0.05
  - 0.05
  - 0.05
  DATCUT: 2020-Apr-30
  DIFF_MASK_HIGH: 999
  DIFF_MASK_LOW: 20
  DIFF_MASK_PROBS:
    get_closest_tip_atoms: 0.0
    get_unconditional_diffusion_mask: 0.075
    get_diffusion_mask_islands: 0.05
    get_closest_tip_atoms_partial_ligand: 0.0
    get_diffusion_mask_islands_partial_ligand: 0.05
    get_unconditional_diffusion_mask_partial_ligand: 0.075
    get_unconditional_diffusion_mask_free_ligand: 0.2
    get_atomized_islands: 0.0
    get_entirely_atomized: 0.0
    get_diffusion_mask_islands_free_ligand: 0.05
    get_tip_mask: 0.125
    get_tip_mask_unconditional_free_ligand: 0.25
    get_tip_mask_unconditional_partial_ligand: 0.125
  DISCONTIGUOUS_CROP: true
  FB_DIR: /projects/ml/TrRosetta/fb_af
  FB_LIST: /projects/ml/TrRosetta/fb_af/list_b1-3.csv
  FLANK_HIGH: 6
  FLANK_LOW: 3
  HAL_MASK_HIGH: 35
  HAL_MASK_HIGH_AR: 50
  HAL_MASK_LOW: 10
  HAL_MASK_LOW_AR: 20
  HOMO_LIST: /projects/ml/RoseTTAComplex/list.homo.csv
  MASK_BROKEN_PROPORTION: 0.5
  MASK_MAX_PROPORTION: 1.0
  MASK_MIN_PROPORTION: 0.2
  MAXCYCLE: 1
  MAXLAT: 256
  MAXSEQ: 1024
  MAXTPLT: 4
  MAX_COMPLEX_CHAIN: 250
  MAX_LENGTH: 256
  MINSEQ: 1
  MINTPLT: 1
  MOL_DIR: /projects/ml/RF2_allatom/rcsb/pkl
  NEGATIVE_LIST: /projects/ml/RoseTTAComplex/list.negative.csv
  PDB_DIR: /projects/ml/TrRosetta/PDB-2021AUG02
  PDB_LIST: /projects/ml/TrRosetta/PDB-2021AUG02/list_v02.csv
  PLDDTCUT: 70.0
  RESCUT: 5.0
  ROWS: 1
  SCCUT: 90.0
  SEQID: 150.0
  SPOOF_ITEM: ''
  STR2SEQ_FULL_HIGH: 1.0
  STR2SEQ_FULL_LOW: 0.9
  USE_GUIDE_POSTS: false
  VAL_COMPL: /projects/ml/RoseTTAComplex/val_lists/xaa
  VAL_NEG: /projects/ml/RoseTTAComplex/val_lists/xaa.neg
  VAL_PDB: /projects/ml/TrRosetta/PDB-2021AUG02/val/xaa
  mask: {}
  P_IS_GUIDEPOST_EXAMPLE: 0.5
  use_fallback: true
  max_residues: -1
  use_validation_config: 0

master_port: 12666

show_dataset:
  show: true
  show_diffused: false
  'n': 10
  show_only_backbone: false

transforms:
  names:
  - AddConditionalInputs
  - CenterPostTransform
  configs:
    PopMask: {}
    Center: {}
    AddConditionalInputs:
      p_is_guidepost_example: 0.5
      guidepost_bonds: true
    ExpandConditionsDict: {}
    CenterPostTransform:
      jitter: 5.0
      jitter_clip: 20.0
      center_type: all

fm:
  t_normalize_clip: 0.9
  trans_scale: 0.1

wandb_dir: /scratch/ptkim